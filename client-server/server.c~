#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <sys/types.h> 
#include <sys/socket.h>
#include <netinet/in.h>

#define ServerPort	2100
#define maxAgents	10

struct prot_details
{
	public:
		string protocol;
		string sender;
		string receiver;
};

struct info_settings
{
	int pdropped; 
	string reason;
	struct prot_details protocol;
	void load(const std::string &filename);
	void save(const std::string &filename);
};

int main(int argc, char *argv[])
{
	int sockfd, newsockfd, portno;
	socklen_t clilen;
	char buffer[256];
	struct sockaddr_in serv_addr, cli_addr;
	int n;

	sockfd = socket(AF_INET, SOCK_STREAM, 0);
	if (sockfd < 0){
		perror("ERROR opening socket");
		exit(1);	
	}
	bzero((char *) &serv_addr, sizeof(serv_addr));
	serv_addr.sin_family = AF_INET;
	serv_addr.sin_addr.s_addr = INADDR_ANY;
	serv_addr.sin_port = htons(ServerPort);

	if (bind(sockfd, (struct sockaddr *) &serv_addr, 
		sizeof(serv_addr)) < 0)
			perror("ERROR on binding");

	listen(sockfd, maxAgents);
	clilen = sizeof(cli_addr);
	while(true){
		newsockfd = accept(sockfd, 
			     (struct sockaddr *) &cli_addr, 
			     &clilen);

		if (newsockfd < 0) 
			perror("ERROR on accept");
		bzero(buffer,256);
		n = read(newsockfd,buffer,255);
		if (n < 0)
			perror("ERROR reading from socket");
		printf("Here is the message: %s\n",buffer);
		n = write(newsockfd,"I got your message",18);
		if (n < 0)
			perror("ERROR writing to socket");
		}
	close(newsockfd);
	close(sockfd);
	return 0; 
}
